{"version":3,"sources":["string-change-detector.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","StringChangeDetector","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","options","Error","onInsert","onRemove","_onInsert","_onRemove","_value","index","oldVal","newVal","substring","setValue","newValue","commonEnd","commonStart","charAt","slice"],"mappings":"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","file":"string-change-detector.min.js","sourcesContent":["/**!\nÂ© 2017 Convergence Labs, Inc.\n@version 0.1.8\n@license MIT\n*/\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"StringChangeDetector\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"StringChangeDetector\"] = factory();\n\telse\n\t\troot[\"StringChangeDetector\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tmodule.exports = __webpack_require__(1).StringChangeDetector;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\tvar StringChangeDetector = exports.StringChangeDetector = function () {\n\t  function StringChangeDetector(options) {\n\t    _classCallCheck(this, StringChangeDetector);\n\n\t    if (!options) {\n\t      throw new Error(\"options must be defined\");\n\t    }\n\n\t    if (typeof options.onInsert !== \"function\") {\n\t      throw new Error(\"options.onInsert must be a function\");\n\t    }\n\n\t    if (typeof options.onRemove !== \"function\") {\n\t      throw new Error(\"options.onRemove must be a function\");\n\t    }\n\n\t    if (typeof options.value !== \"string\") {\n\t      throw new Error(\"options.value must be a string\");\n\t    }\n\n\t    this._onInsert = options.onInsert;\n\t    this._onRemove = options.onRemove;\n\t    this._value = options.value;\n\t  }\n\n\t  /**\n\t   * Inserts a string into the current value at the specified index.\n\t   *\n\t   * @param index {number}\n\t   *    The index in the string to insert into.\n\t   * @param value {string}\n\t   *   The value to insert into the string.\n\t   */\n\n\n\t  _createClass(StringChangeDetector, [{\n\t    key: \"insertText\",\n\t    value: function insertText(index, value) {\n\t      var oldVal = this._value;\n\t      var newVal = oldVal.substring(0, index) + value + oldVal.substring(index, oldVal.length);\n\t      this.setValue(newVal);\n\t    }\n\n\t    /**\n\t     * Removes a specified number of characters from the current string at\n\t     * a specific location.\n\t     *\n\t     * @param index {number}\n\t     *    The index in the string to remove characters.\n\t     * @param length {number}\n\t     *   The number of characters to remove.\n\t     */\n\n\t  }, {\n\t    key: \"removeText\",\n\t    value: function removeText(index, length) {\n\t      var oldVal = this._value;\n\t      var newVal = oldVal.substring(0, index) + oldVal.substring(index + length, oldVal.length);\n\t      this.setValue(newVal);\n\t    }\n\n\t    /**\n\t     * Sets the current value of the string.\n\t     *\n\t     * @param value {string}\n\t     *   The new value of the string.\n\t     */\n\n\t  }, {\n\t    key: \"setValue\",\n\t    value: function setValue(value) {\n\t      this._value = value;\n\t    }\n\n\t    /**\n\t     * Gets the current value of the string.\n\t     *\n\t     * @returns {string}\n\t     */\n\n\t  }, {\n\t    key: \"getValue\",\n\t    value: function getValue() {\n\t      return this._value;\n\t    }\n\n\t    /**\n\t     * Process the new value of the string after a single edit.\n\t     *\n\t     * @param newValue {string}\n\t     *   The new value to process.\n\t     */\n\n\t  }, {\n\t    key: \"processNewValue\",\n\t    value: function processNewValue(newValue) {\n\t      var commonEnd = 0;\n\t      var commonStart = 0;\n\n\t      if (this._value === newValue) {\n\t        return;\n\t      }\n\n\t      while (this._value.charAt(commonStart) === newValue.charAt(commonStart)) {\n\t        commonStart++;\n\t      }\n\n\t      while (this._value.charAt(this._value.length - 1 - commonEnd) === newValue.charAt(newValue.length - 1 - commonEnd) && commonEnd + commonStart < this._value.length && commonEnd + commonStart < newValue.length) {\n\t        commonEnd++;\n\t      }\n\n\t      // Characters were removed.\n\t      if (this._value.length !== commonStart + commonEnd) {\n\t        if (this._onRemove) {\n\t          this._onRemove(commonStart, this._value.length - commonStart - commonEnd);\n\t        }\n\t      }\n\n\t      // Characters were added\n\t      if (newValue.length !== commonStart + commonEnd) {\n\t        if (this._onInsert) {\n\t          this._onInsert(commonStart, newValue.slice(commonStart, newValue.length - commonEnd));\n\t        }\n\t      }\n\n\t      this._value = newValue;\n\t    }\n\t  }]);\n\n\t  return StringChangeDetector;\n\t}();\n\n/***/ }\n/******/ ])\n});\n;"],"sourceRoot":"/source/"}